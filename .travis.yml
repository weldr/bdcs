sudo: required
dist: trusty
language: c
services:
  - docker

cache:
  directories:
    - ~/.ghc
    - ~/.cabal

before_install:
  - pip install s3cmd
  - sudo docker pull welder/bdcs-build-img:latest
  - wget https://haskell.org/platform/download/8.0.2/haskell-platform-8.0.2-unknown-posix--minimal-x86_64.tar.gz
  - tar -xzvf ./haskell-platform-8.0.2-unknown-posix--minimal-x86_64.tar.gz
  - sudo ./install-haskell-platform.sh
  - travis_retry cabal update && cabal install hpc-coveralls


script:
  - sudo make integration-test


after_success:
  - |
        # copy the coverage data out of the container
        sudo docker cp tests:/importer/dist ./importer/dist
        # copy compiled binaries out of the container so we can upload
        # them to S3 later
        sudo docker cp tests:/importer/dist/import/import .
        sudo docker cp tests:/importer/dist/export/export .
        sudo docker rm tests

        # report to coveralls here because we need access to git
        sudo chown travis:travis -R ./importer/dist
        cd importer/ && ~/.cabal/bin/hpc-coveralls --display-report test-bdcs import export bdcs-tmpfiles depsolve

        if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
            sudo docker tag welder/bdcs-build-img:latest welder/bdcs-build-img:$TRAVIS_BUILD_NUMBER

            docker login -u atodorov -p $DOCKER_PASSWORD
            docker push welder/bdcs-build-img

            s3cmd sync --access_key="$ARTIFACTS_KEY" --secret_key="$ARTIFACTS_SECRET" -v -P ./import s3://weldr/import
            s3cmd sync --access_key="$ARTIFACTS_KEY" --secret_key="$ARTIFACTS_SECRET" -v -P ./export s3://weldr/export
        fi

notifications:
  email:
    on_failure: change
    on_success: never

env:
    global:
        secure: "ppLH0NQB9Q4o4yqteWyfkSKCmoDm1puTz3hMiGjtLf7AZrp9M6F3dv3VWIv+ph7vDxuaL/UA5SSgGwLGi/ZeFt/YNda+nk5oyVR7clGxb8SYOK+S/jBiAKH5SHw7QHpMoJnTlNZE1UmJXzHj96XTWv/XCxBEyx1wjvyjeGVaQS8kM5VFCBp3/jPNonssReotCWVd/I+9tyeCb39cxi8P2mjqsSO0njNIn9gtyqLjEafSypw5qrI1fxBfkS35Ir5aXhmP60o/qy+EaUAdnGjA5+PNB4N5M8/RN09nGX0jNia3mx2ZAwPmU7L/vnzRId61pC2fSyO5A619tG4P+53cJDjtgMf8+y72AZY6yyDGhubEBhMbeegCvrdhNmBEjtH/48zOh0qHRSY4zJQzw5oWZGk6AbZUBvUu5n1DKRDBNLw2RRjTTjNk/uMfZlGsYt96zBrkttK5VIRUCgOqw6zeTZDgJPXNogU5t+2TBUnEOlDFxFYxP4gN804oLfcMu+zAg0e2KeS0nODNkfuJp7r4fuFCRIFhLh2L5GSMT7tAAHLX75iuxdLwmUCfokiVFkIOlC+7FZHXmDenuYM8djQpRZx3WZae2Ff+EE5JfORRuGC4VHp5n1sD7M2uvAjMN4oBZMx52gGHwcETaU3+AB2aGyBQ0ltoL5cZC9V1pN3/Dzo="
